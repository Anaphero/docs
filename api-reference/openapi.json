{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI Plant Store",
    "description": "A sample API that uses a plant store as an example to demonstrate features in the OpenAPI specification",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.anaphero.com/v1"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "description": "Returns the health status of the API",
        "responses": {
          "200": {
            "description": "API is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/call": {
      "get": {
        "description": "Returns all calls available to your organization",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to return. Defaults to 100, maximum is 1000.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "createdAtGe",
            "in": "query",
            "description": "Filter calls created on or after this date (ISO 8601 format)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "createdAtLe",
            "in": "query",
            "description": "Filter calls created on or before this date (ISO 8601 format)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List Calls",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Call"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Create new call",
        "requestBody": {
          "description": "Call to add to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCall"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Call response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Call"
                }
              }
            }
          }
        }
      }
    },
    "/assistant/{assistantId}": {
      "get": {
        "description": "Returns a single assistant based on the assistantId supplied",
        "parameters": [
          {
            "name": "assistantId",
            "in": "path",
            "description": "ID of assistant to return",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Assistant response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assistant"
                }
              }
            }
          }
        }
      },

      "patch": {
        "description": "Updates an existing assistant",
        "parameters": [
          {
            "name": "assistantId",
            "in": "path",
            "description": "ID of assistant to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Assistant properties to update",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAssistant"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Assistant updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assistant"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Assistant not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },

      "delete": {
        "description": "Deletes a single assistant based on the assistantId supplied",
        "parameters": [
          {
            "name": "assistantId",
            "in": "path",
            "description": "ID of assistant to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Assistant deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assistant"
                }
              }
            }
          }
        }
      }
    },

    "/call/{callId}": {
      "get": {
        "description": "Returns a single call based on the callId supplied",
        "parameters": [
          {
            "name": "callId",
            "in": "path",
            "description": "ID of call to return",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Call response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Call"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a single call based on the callId supplied",
        "parameters": [
          {
            "name": "callId",
            "in": "path",
            "description": "ID of call to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Call deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Call"
                }
              }
            }
          }
        }
      }
    },
    "/workflow/inbound-referral": {
      "post": {
        "description": "Create a new inbound referral",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "documentUrl": {
                    "type": "string",
                    "format": "uri"
                  },
                  "referringProviderFirstName": {
                    "type": "string",
                    "nullable": true
                  },
                  "referringProviderLastName": {
                    "type": "string",
                    "nullable": true
                  },
                  "referralReason": {
                    "type": "string",
                    "nullable": true
                  },
                  "referralType": {
                    "type": "string",
                    "enum": ["sleep", "pulmonology"]
                  },
                  "referredToLocationId": {
                    "type": "string",
                    "enum": ["2"]
                  },
                  "referredToProviderId": {
                    "type": "string",
                    "enum": ["77562", "74570", "75929"]
                  },
                  "patientData": {
                    "type": "object",
                    "properties": {
                      "mrn": {
                        "type": "string"
                      },
                      "sex": {
                        "type": "string",
                        "enum": ["male", "female", "other"],
                        "nullable": true
                      },
                      "firstName": {
                        "type": "string"
                      },
                      "lastName": {
                        "type": "string"
                      },
                      "dob": {
                        "type": "string",
                        "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
                      },
                      "cellNumber": {
                        "type": "string",
                        "nullable": true
                      },
                      "homeNumber": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string",
                        "nullable": true
                      },
                      "insuranceName": {
                        "type": "string",
                        "nullable": true
                      },
                      "insuranceSubscriberName": {
                        "type": "string",
                        "nullable": true
                      },
                      "insuranceSequence": {
                        "type": "string",
                        "enum": ["primary", "secondary", "tertiary"],
                        "nullable": true
                      },
                      "address": {
                        "type": "object",
                        "properties": {
                          "street": {
                            "type": "string"
                          },
                          "city": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string",
                            "enum": [
                              "AL",
                              "AK",
                              "AZ",
                              "AR",
                              "CA",
                              "CO",
                              "CT",
                              "DE",
                              "FL",
                              "GA",
                              "HI",
                              "ID",
                              "IL",
                              "IN",
                              "IA",
                              "KS",
                              "KY",
                              "LA",
                              "ME",
                              "MD",
                              "MA",
                              "MI",
                              "MN",
                              "MS",
                              "MO",
                              "MT",
                              "NE",
                              "NV",
                              "NH",
                              "NJ",
                              "NM",
                              "NY",
                              "NC",
                              "ND",
                              "OH",
                              "OK",
                              "OR",
                              "PA",
                              "RI",
                              "SC",
                              "SD",
                              "TN",
                              "TX",
                              "UT",
                              "VT",
                              "VA",
                              "WA",
                              "WV",
                              "WI",
                              "WY"
                            ]
                          },
                          "zipcode": {
                            "type": "string",
                            "pattern": "^\\d{5}(-\\d{4})?$"
                          }
                        },
                        "required": ["street", "city", "state", "zipcode"]
                      }
                    },
                    "required": [
                      "sex",
                      "homeNumber",
                      "firstName",
                      "lastName",
                      "dob"
                    ]
                  }
                },
                "required": [
                  "referralType",
                  "referredToLocationId",
                  "patientData"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Inbound referral created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "get": {
        "description": "Returns all referrals available to your organization",
        "responses": {
          "200": {
            "description": "List of Referrals",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Referral"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/phone-number/{id}": {
      "get": {
        "description": "Returns a single phone number based on the id supplied",
        "responses": {
          "200": {
            "description": "Phone number response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneNumber"
                }
              }
            }
          }
        }
      }
    },
    "/phone-number": {
      "get": {
        "description": "Lists all phone numbers available to your organization",
        "parameters": [
          {
            "name": "assistantId",
            "in": "query",
            "description": "Filter phone numbers by assistantId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Phone Numbers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhoneNumber"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/plants": {
      "get": {
        "description": "Returns all plants from the system that the user has access to",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Plant"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new plant in the store",
        "requestBody": {
          "description": "Plant to add to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPlant"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Plant"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/plants/{id}": {
      "delete": {
        "description": "Deletes a single plant based on the ID supplied",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of plant to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Plant deleted",
            "content": {}
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/assistant": {
      "get": {
        "description": "Returns all assistants available to your organization",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to return. Defaults to 100, maximum is 1000.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "created_at_ge",
            "in": "query",
            "description": "Filter assistants created on or after this date (ISO 8601 format)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created_at_le",
            "in": "query",
            "description": "Filter assistants created on or before this date (ISO 8601 format)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Assistants",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Assistant"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new assistant",
        "requestBody": {
          "description": "Assistant to create",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAssistant"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Assistant created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assistant"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "Assistant": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The unique identifier for the assistant"
          },
          "name": {
            "type": "string",
            "description": "The name of the assistant"
          },
          "organization_id": {
            "type": "integer",
            "description": "The identifier of the organization the assistant belongs to"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp when the assistant was created"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp when the assistant was last updated"
          },
          "model": {
            "type": "object",
            "description": "The language model configuration for the assistant"
          },
          "voice": {
            "type": "object",
            "description": "The voice model configuration for the assistant"
          },
          "first_message": {
            "type": "string",
            "description": "The initial message the assistant will use"
          },
          "max_duration_seconds": {
            "type": "integer",
            "description": "The maximum duration in seconds for the assistant's interaction"
          },
          "voicemail_message": {
            "type": "string",
            "description": "The message the assistant will leave as a voicemail"
          },
          "webhook_url": {
            "type": "string",
            "description": "The URL the assistant will send the end of call report to"
          },
          "is_webhook_secret_set": {
            "type": "boolean",
            "description": "Whether a secret is set for the webhook"
          },
          "analysis_plan": {
            "type": "object",
            "description": "The analysis plan for the assistant"
          }
        },
        "required": [
          "id",
          "name",
          "organization_id",
          "created_at",
          "updated_at"
        ]
      },
      "PhoneNumber": {
        "required": ["phoneNumberId", "number", "telephonyProvider"],
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique id for the phone number",
            "type": "integer"
          },
          "organization_id": {
            "description": "The id of the organization the phone number belongs to",
            "type": "integer"
          },
          "name": {
            "description": "The human-friendly name of the phone number",
            "type": "string"
          },
          "assistant_id": {
            "description": "The id of the assistant that the phone number is associated with for inbound calls",
            "type": "integer"
          },
          "number": {
            "description": "The phone number with country code",
            "type": "string"
          }
        }
      },
      "CreateCall": {
        "required": ["taskId", "destinationNumberId"],
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the call for your own reference",
            "type": "string",
            "maxLength": 50
          },
          "assistant_id": {
            "description": "The id of the assistant to use for the call",
            "type": "string"
          },
          "source_phone_number_id": {
            "description": "The phoneNumberId of the phone number that will be used to make the call",
            "type": "string"
          },
          "destination_phone_number_id": {
            "description": "The phoneNumberId of the number you would like to call",
            "type": "string"
          },
          "task_parameters": {
            "description": "Any override setting you would like to pass into the assistant configuration.",
            "type": "object"
          }
        }
      },
      "Call": {
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique id for the call",
            "type": "integer"
          },
          "assistant_id": {
            "description": "The id of the assistant that handled the call",
            "type": "integer"
          },
          "started_at": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time the call was started",
            "nullable": true
          },
          "ended_at": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time the call ended",
            "nullable": true
          },
          "call_status": {
            "type": "string",
            "description": "The status of the call"
          },
          "ended_reason": {
            "type": "string",
            "description": "The reason why the call ended",
            "nullable": true
          },
          "transcript": {
            "type": "string",
            "description": "The transcript of the call",
            "nullable": true
          },
          "source_number": {
            "type": "string",
            "description": "The phone number that initiated the call",
            "nullable": true
          },
          "destination_number": {
            "type": "string",
            "description": "The phone number that received the call",
            "nullable": true
          },
          "call_type": {
            "type": "string",
            "description": "The type of call"
          },
          "messages": {
            "type": "object",
            "description": "Any messages associated with the call",
            "nullable": true
          },
          "duration_ms": {
            "type": "integer",
            "description": "The duration of the call in milliseconds",
            "nullable": true
          },
          "analysis": {
            "type": "object",
            "description": "Any analysis performed on the call",
            "nullable": true
          }
        }
      },

      "Plant": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the plant",
            "type": "string"
          },
          "tag": {
            "description": "Tag to specify the type",
            "type": "string"
          }
        }
      },
      "NewPlant": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Plant"
          },
          {
            "required": ["id"],
            "type": "object",
            "properties": {
              "id": {
                "description": "Identification number of the plant",
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "Error": {
        "required": ["error", "message"],
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      },

      "Referral": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "organization_id": {
            "type": "integer"
          },
          "patient_id": {
            "type": "integer"
          },
          "workflow_id": {
            "type": "integer"
          },
          "referral_source": {
            "type": "string"
          },
          "date_referral_received_by_clinic": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "appointment_id": {
            "type": "integer",
            "nullable": true
          },
          "referral_reason": {
            "type": "string"
          },
          "referring_provider": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "referred_to_location_id": {
            "type": "string"
          },
          "referred_to_provider_id": {
            "type": "string"
          },
          "appointment": {
            "type": "object",
            "nullable": true,
            "properties": {
              "id": {
                "type": "integer"
              },
              "created_at": {
                "type": "string",
                "format": "date-time"
              },
              "patient_id": {
                "type": "integer"
              },
              "location_id": {
                "type": "string"
              },
              "provider_id": {
                "type": "string"
              },
              "appointment_type": {
                "type": "string"
              },
              "appointment_datetime": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "patient": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "mrn": {
                "type": "string"
              },
              "email": {
                "type": "string",
                "format": "email"
              },
              "last_name": {
                "type": "string"
              },
              "first_name": {
                "type": "string"
              },
              "cell_number": {
                "type": "string"
              },
              "home_number": {
                "type": "string"
              },
              "date_of_birth": {
                "type": "string",
                "format": "date"
              }
            }
          }
        }
      },
      "UpdateAssistant": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The updated name of the assistant"
          },
          "model": {
            "type": "object",
            "description": "The updated language model configuration for the assistant"
          },
          "voice": {
            "type": "object",
            "description": "The updated voice model configuration for the assistant"
          },
          "first_message": {
            "type": "string",
            "description": "The updated initial message the assistant will use"
          },
          "max_duration_seconds": {
            "type": "integer",
            "description": "The updated maximum duration in seconds for the assistant's interaction"
          },
          "voicemail_message": {
            "type": "string",
            "description": "The updated message the assistant will leave as a voicemail"
          },
          "webhook_url": {
            "type": "string",
            "description": "The updated URL the assistant will send the end of call report to"
          },
          "analysis_plan": {
            "type": "object",
            "description": "The updated analysis plan for the assistant"
          }
        }
      },
      "CreateAssistant": {
        "type": "object",
        "required": ["name", "organization_id"],
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the assistant"
          },
          "model": {
            "type": "object",
            "description": "The language model configuration for the assistant"
          },
          "voice": {
            "type": "object",
            "description": "The voice model configuration for the assistant"
          },
          "first_message": {
            "type": "string",
            "description": "The initial message the assistant will use"
          },
          "max_duration_seconds": {
            "type": "integer",
            "description": "The maximum duration in seconds for the assistant's interaction"
          },
          "voicemail_message": {
            "type": "string",
            "description": "The message the assistant will leave as a voicemail"
          },
          "webhook_url": {
            "type": "string",
            "description": "The URL the assistant will send the end of call report to"
          },
          "analysis_plan": {
            "type": "object",
            "description": "The analysis plan for the assistant"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
